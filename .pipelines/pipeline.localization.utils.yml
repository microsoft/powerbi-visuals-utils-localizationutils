trigger: 
- main

variables:
  - name: branchRef
    value: 'dev/alsavelev/configure-script'
  - name: locBranchNamePrefix
    value: 'parsed_localizations_'

resources:
  repositories:
    - repository: powerbi-visuals-utils-localizationutils
      endpoint: 'pbicvloc GitHub'
      type: github
      name: microsoft/powerbi-visuals-utils-localizationutils
      ref: refs/heads/$(branchRef)

stages:
- stage: build
  jobs:
  - job: main
    pool:
      vmImage: 'windows-latest'

    steps:
      - checkout: powerbi-visuals-utils-localizationutils
        persistCredentials: true
      - powershell: |
          $branchName = "$(locBranchNamePrefix)" + (Get-Date -Format "yyyy-MM-dd_HH-mm-ss")
          Write-Host "##vso[task.setvariable variable=branchName]$branchName"
        name: SetVariables
        displayName: 'Set Variables'
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js'
      - script: |
          git config --global user.name "$(LOC_BOT_NAME)"
          git config --global user.email "$(LOC_BOT_EMAIL)"
          git config --global core.autocrlf false
          git checkout -b $(branchName)
        displayName: 'Configure Git'
      - task: OneLocBuild@2
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        inputs:
          locProj: 'LocProject.json'
          outDir: '$(Build.SourcesDirectory)'
          isCreatePrSelected: true
          repoType: 'gitHub'
          prSourceBranchPrefix: 'locfiles'
          dependencyPackageSource: 'https://powerbi.pkgs.visualstudio.com/PowerBIClients/_packaging/VisualsMonitorFeed/nuget/v3/index.json'
          packageSourceAuth: 'patAuth'
        displayName: 'Run OneLocBuild'
      - script: npm install
        displayName: 'Install dependencies'
      - script: npm run parseNewLocalizations
        displayName: 'Parse new localizations'
      - script: git status --short
        displayName: 'Git status'
      - powershell: |
          $matchingPRs = gh pr list --repo "microsoft/powerbi-visuals-utils-localizationutils" `
            --author "@me" `
            --state open `
            --json number,headRefName | ConvertFrom-Json | `
            Where-Object { $_.headRefName -match "$(locBranchNamePrefix)" } | `
            Select-Object -ExpandProperty number

          if (-not $matchingPRs) {
            Write-Host "No open pull requests matching the branch pattern '$(locBranchNamePrefix)'."
          } else {
            foreach ($pr in $matchingPRs) {
              Write-Host "Attempting to close PR #$pr"
              gh pr close $pr --repo "microsoft/powerbi-visuals-utils-localizationutils" --delete-branch
              if ($LASTEXITCODE -eq 0) {
                Write-Host "Successfully closed PR #$pr and deleted its branch"
              } else {
                Write-Host "Failed to close PR #$pr - Please check repository permissions"
              }
            }
          }
        displayName: 'Delete old pull requests'
        env:
          GH_TOKEN: $(LOC_BOT_PAT)
      - powershell: |
          if (git diff-index --quiet HEAD --) {
            Write-Host "No changes to commit"
            exit 0
          } else {
            Write-Host "Changes detected, proceeding with commit"
            git add localizations/*
            git commit -m "Update localizations"
            git push origin $(branchName)
            
            gh pr create `
              --base $(branchRef) `
              --title "Update localizations $(Get-Date -Format 'yyyy-MM-dd')" `
              --body "Automated PR to update localizations"
            
            if ($LASTEXITCODE -ne 0) {
              Write-Host "Failed to create PR, it might already exist"
            }
          }
        displayName: 'Process and Push Localizations'
        continueOnError: true
        env:
          GH_TOKEN: $(LOC_BOT_PAT)
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.SourcesDirectory)'
          artifact: 'drop'
          publishLocation: 'pipeline'
        displayName: 'Publish Pipeline Artifact'
